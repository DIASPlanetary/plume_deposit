import matplotlib.pyplot as plt
import numpy as np
import matplotlib.colors as colors
import mpl_scatter_density
from matplotlib.colors import LinearSegmentedColormap

#this imported colormap code ensures the background remains white
whitebg_cmap = LinearSegmentedColormap.from_list('whitebg_cmap', [(0, '#ffffff'),(1e-20, '#330066'),(0.2, '#6600CC'),(0.4, '#FF007F'),(0.6, '#FF6666'),(0.8, '#FF9933'),(1, '#FFE42F'),], N=256)

#the following code is used to load the densityStorage.npy file
#the path file will need to be changed if run on another device. 
f = np.load(r"C:\Users\Isabelle\Documents\europa_tommy_100\output_neutral\densityStorage.npy", allow_pickle=True)
#splitting the file into x-y-z coordinates and density data
x, y, z = f[1]
density = f[0]

#print to analyse the shapes and size of the given parameters
print(len(x),len(y),len(z),len(density),density.shape, density.size)

#this code replicates the given figure 3 from tommy's output.
#the graph shows the xy axes, which will correspond to a singular point on the z axis
#the singular point z_slice can be changed to see how xy changes along the z axis
#z has a len of 600 so z_slice can be any integer between 0-600
z_slice = 100
#density[:,:,100] tells the code to return the density data when the z axis is sliced at point z_slice
#extent tells the code what the axis parameters should be
#origin is automatically set to 'upper' so it is manually set to 'lower' below
plt.imshow(density[:, :, z_slice], extent=[x.min(), x.max(), y.min(), y.max()], origin='lower', cmap='magma')
plt.colorbar(label='Density [#/cc]')
plt.xlim(-0.5e6,0.5e6)
plt.ylim(-0.5e6,0.5e6)
plt.xlabel('X [m]')
plt.ylabel('Y [m]')
plt.title(f'Density [#/cc] in XY plane with z coordinate: {z[100]}m')
plt.show()

#the code below attempts to replicate the given figure 8bb from tommy's output
#in this case the xz axes are being plotted while the y-axis is being sliced
#density[y_slice, :, :].T will transpose the data so that the z-coords are now on the y-axis
y_slice = 190
plt.imshow(density[y_slice, :, :].T,extent=[x.min(),x.max(),z.min(),z.max()],origin = 'lower', cmap= whitebg_cmap)
plt.colorbar()
plt.xlim(-2e6,2e6)
plt.ylim(-2e6,2e6)
plt.xlabel('X Coordinates')
plt.ylabel('Z Coordinates')
plt.title('Density [#/m**3]')
plt.show()
