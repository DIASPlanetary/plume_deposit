#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Sun Jun 16 22:55:55 2024

@author: marina
"""
import numpy as np
import matplotlib.pyplot as plt
from matplotlib.colors import LogNorm

# Constants
rho = 10**15  # Density of H2O in the plume (ptcls/m^3)
v_avg = 460  # Average velocity (m/s)
A = 10**8  # Area of the plume source (m^2)
sputtering_rate = 3.2e13  # Sputtering rate (ptcls/m^2/s)

# Define the ranges for eruption time and mass flux
eruption_times = np.linspace(1, 30000, 100)  # Eruption times from 1 to 30,000 seconds
mass_flux_rates = np.arange(1, 10000 + 1, 10)  # Mass flux rates from 10 to 10,000 ptcls/s

# CALCULATIONS:
# Calculate total particles erupted
def calculate_total_particles_eruption(mass_flux_rate, t_eruption):
    N = mass_flux_rate * t_eruption
    return N

# Calculate maximum disappearance time
def calculate_max_disappearance_time(total_particles, sputtering_rate):
    return total_particles / (sputtering_rate * A)

# PLOTTING: 
# Create a meshgrid for plotting
mass_flux_grid, eruption_time_grid = np.meshgrid(mass_flux_rates, eruption_times)

# Initialize the array for maximum disappearance times
Tmax_grid = np.zeros_like(mass_flux_grid, dtype=float)

# Calculate Tmax for each combination of mass flux rate and eruption time
for i in range(len(eruption_times)):
    for j in range(len(mass_flux_rates)):
        total_particles = calculate_total_particles_eruption(mass_flux_rates[j], eruption_times[i])
        Tmax_grid[i, j] = calculate_max_disappearance_time(total_particles, sputtering_rate)

# Plotting the heatmap
plt.figure(figsize=(8, 6))
plt.pcolormesh(mass_flux_grid, eruption_time_grid, Tmax_grid, shading='auto', norm=LogNorm())
plt.colorbar(label='Max Disappearance Time (s)')


plt.xlabel('Mass Flux Rate (ptcls/s)')
plt.ylabel('Eruption Time (s)')
plt.title('Max Disappearance Time as Function of Mass Flux Rate and Eruption Time')
plt.show()

# Example calculations for print
example_mass_flux_rate = 7000  # Example mass flux rate
example_eruption_time = 25000  # Example eruption time
total_particles = calculate_total_particles_eruption(example_mass_flux_rate, example_eruption_time)
max_disappearance_time = calculate_max_disappearance_time(total_particles, sputtering_rate)
print(f"Total particles erupted: {total_particles:.2E}")
print(f"Max disappearance time: {max_disappearance_time:.2E} seconds")
